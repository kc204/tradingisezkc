// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview An AI agent that recommends prop firms based on user input.
 *
 * - propFirmRecommendation - A function that handles the prop firm recommendation process.
 * - PropFirmRecommendationInput - The input type for the propFirmRecommendation function.
 * - PropFirmRecommendationOutput - The return type for the propFirmRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const PropFirmRecommendationInputSchema = z.object({
  riskProfile: z
    .string()
    .describe('The risk profile of the user (e.g., low, medium, high).'),
  tradingStyle: z
    .string()
    .describe('The trading style of the user (e.g., scalping, day trading, swing trading).'),
});
export type PropFirmRecommendationInput = z.infer<typeof PropFirmRecommendationInputSchema>;

const PropFirmRecommendationOutputSchema = z.object({
  recommendation: z
    .string()
    .describe('The recommended prop firms based on the user input.'),
});
export type PropFirmRecommendationOutput = z.infer<typeof PropFirmRecommendationOutputSchema>;

export async function propFirmRecommendation(
  input: PropFirmRecommendationInput
): Promise<PropFirmRecommendationOutput> {
  return propFirmRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'propFirmRecommendationPrompt',
  input: {schema: PropFirmRecommendationInputSchema},
  output: {schema: PropFirmRecommendationOutputSchema},
  prompt: `You are an expert in proprietary trading firms.

You will recommend the best prop firms based on the user's risk profile and trading style.

Risk Profile: {{{riskProfile}}}
Trading Style: {{{tradingStyle}}}

Recommendation:`, 
});

const propFirmRecommendationFlow = ai.defineFlow(
  {
    name: 'propFirmRecommendationFlow',
    inputSchema: PropFirmRecommendationInputSchema,
    outputSchema: PropFirmRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
